{"version":3,"sources":["components/environmentSelection/environmentSelection.module.css","containers/settings/settings.module.css","containers/devices/devices.module.css","containers/login/login.module.css","components/toggle/toggle.module.css","containers/gateOpener/gateOpener.module.css","containers/doorman/doorman.module.css","components/header/header.module.css","components/input/input.module.css","config.ts","utils/storageHelper.ts","utils/authHelper.ts","components/loginRequired/loginRequired.tsx","components/header/header.tsx","providers/cameraProvider.ts","containers/viewCameras/viewCameras.tsx","providers/gateProvider.ts","containers/gateOpener/gateOpener.tsx","providers/announcementProvider.ts","containers/doorman/doorman.tsx","providers/beaconProvider.ts","containers/nearbyDevices/nearbyDevices.tsx","providers/authProvider.ts","containers/login/login.tsx","containers/home/home.tsx","containers/login/logout.tsx","providers/healthProvider.ts","components/environmentSelection/environmentSelection.tsx","providers/fastPropertyProvider.ts","utils/stringFormatting.ts","components/toggle/toggle.tsx","components/input/input.tsx","containers/settings/settings.tsx","providers/deviceProvider.ts","containers/devices/devices.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","circle","black","red","green","blue","container","row","left","right","submit","header","selected","knob","hidden","logs","response","navbar","configValues","local","serverPath","appRoot","prod","dev","currentEnv","setConfigEnv","env","config","key","arguments","length","undefined","USE_LOCAL_STORE","localStorage","storageHelper","memoryStore","lastExpirationCheck","Date","now","this","store","_getStore","Object","keys","forEach","expiration","_setStore","dataStr","getItem","JSON","parse","value","_checkForExpired","setItem","stringify","data","clear","authHelper","auth","set","setAuth","get","token","LoginRequired","getToken","react_default","a","createElement","react_router","to","concat","Header","className","style","loginRequired","react_router_dom","cameraProvider","cam","Error","fetch","method","headers","Authorization","res","blob","ViewCameras","state","images","totalCameras","mounted","fetchImages","_callee","_loop","i","regenerator_default","wrap","_context2","prev","next","_this","abrupt","mark","imageBlob","image","_context","getCameraImage","sent","URL","createObjectURL","setState","slice","splice","t0","stop","delegateYield","setTimeout","getTotalCameras","Fragment","map","idx","alt","src","React","Component","gateProvider","text","msg","GateOpener","_useState","useState","_useState2","slicedToArray","setLogs","getLogs","then","_useState3","_useState4","openRes","setOpenRes","type","onClick","openGate","split","reverse","join","announcementProvider","Doorman","setMsg","styles","comingHome","catch","console","error","bind","beaconProvider","NearbyDevices","nearbyDevices","setNearbyDevices","currentDevices","id","dangerouslySetInnerHTML","__html","authProvider","username","password","body","redirect","Content-Type","json","Login","loggedIn","login","e","preventDefault","_this2","onSubmit","placeholder","name","onChange","target","Home","Logout","clearAuth","healthProvider","lastRefresh","REFRESH_INTERVAL","EnvironmentSelection","setEnv","findBestEnvironment","_findBestEnvironment","apply","asyncToGenerator","envPriority","foundEnv","_env","healthcheck","color","fastPropertyProvider","properties","knownAcronyms","Set","knownShortWords","toTitleCase","str","word","has","toLowerCase","toUpperCase","Toggle","props","Input","val","parseFloat","Settings","setConfig","updateTimeout","setValue","newValue","objectSpread","defineProperty","clearTimeout","window","put","fp","lastIsUpper","char","toSnakeCase","replace","formatFp","toggle","input","deviceProvider","devices","device","Devices","deviceList","setDeviceList","getAll","status","findIndex","d","list","App","environmentSelection","path","exact","component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","ReactDOM","render","src_App","document","getElementById","process","href","origin","addEventListener","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"4EACAA,EAAAC,QAAA,CAAkBC,OAAA,qCAAAC,MAAA,oCAAAC,IAAA,kCAAAC,MAAA,oCAAAC,KAAA,wDCAlBN,EAAAC,QAAA,CAAkBM,UAAA,4BAAAC,IAAA,sBAAAC,KAAA,uBAAAC,MAAA,6CCAlBV,EAAAC,QAAA,CAAkBM,UAAA,2BAAAC,IAAA,qBAAAC,KAAA,sBAAAC,MAAA,4CCAlBV,EAAAC,QAAA,CAAkBM,UAAA,yBAAAI,OAAA,sBAAAC,OAAA,2CCAlBZ,EAAAC,QAAA,CAAkBM,UAAA,0BAAAM,SAAA,yBAAAC,KAAA,0CCAlBd,EAAAC,QAAA,CAAkBM,UAAA,8BAAAQ,OAAA,2BAAAC,KAAA,8CCAlBhB,EAAAC,QAAA,CAAkBM,UAAA,2BAAAU,SAAA,+CCAlBjB,EAAAC,QAAA,CAAkBiB,OAAA,iECAlBlB,EAAAC,QAAA,CAAkBM,UAAA,qQCYZY,EAAe,CAKnBC,MAAO,CACLC,WAAY,+BACZC,QAAS,SAEXC,KAAM,CACJF,WAAY,+BACZC,QAAS,SAEXE,IAAK,CACHH,WAAY,wBACZC,QAAS,UAQTG,EAAwB,MAE5B,SAASC,EAAaC,GACpBF,EAAaE,EAGf,IAOeC,EAPA,SACbC,GAE6B,IAD7BF,EAC6BG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADZL,EAEjB,OAAON,EAAaQ,GAAKE,ICrCrBI,EAA0C,qBAAjBC,aA4DhBC,EADO,qDArDpBC,YAAyB,QACzBC,oBAAsB,iEAEpB,KAAIC,KAAKC,MAAQC,KAAKH,oBANQ,MAM9B,CAEAG,KAAKH,oBAAsBC,KAAKC,MAChC,IAAME,EAAQD,KAAKE,YACnBC,OAAOC,KAAKH,GAAOI,QAAQ,SAAAhB,GACrBY,EAAMZ,GAAKiB,WAAaR,KAAKC,cAAcE,EAAMZ,KAEvDW,KAAKO,UAAUN,wCAIf,GAAIR,EAAiB,CACnB,IAAMe,EAAUd,aAAae,QApBX,oBAqBlB,GAAID,EAAS,OAAOE,KAAKC,MAAMH,GAEjC,OAAOR,KAAKJ,8CAGJgB,GACRZ,KAAKa,mBACLb,KAAKJ,YAAcgB,EACfnB,GACFC,aAAaoB,QA9BK,mBA8BoBJ,KAAKK,UAAUH,gCAIrDvB,EAAauB,GAA2C,IAA/BN,EAA+BhB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAjCrC,QAkCfW,EAAQD,KAAKE,YAMnB,OALAD,EAAMZ,GAAO,CACXiB,WAAYR,KAAKC,MAAQO,EACzBM,SAEFZ,KAAKO,UAAUN,GACRW,8BAGLvB,GACF,IAAM2B,EAAOhB,KAAKE,YAAYb,GAC9B,GAAK2B,EACL,OAAIA,EAAKV,WAAaR,KAAKC,MAAcC,KAAKiB,MAAM5B,GAC7C2B,EAAKJ,oCAGRvB,GACJ,IAAM2B,EAAOhB,KAAKE,mBACXc,EAAK3B,GACZW,KAAKO,UAAUS,aCxCJE,EADI,qDAhBjBC,KAAoB,yDACZA,GACNnB,KAAKmB,KAAOA,GAAQ,KACpBxB,EAAcyB,IAAI,OAAQD,uCAG1BnB,KAAKmB,KAAO,KACZxB,EAAcsB,MAAM,2CAIpB,OADkB,OAAdjB,KAAKmB,MAAenB,KAAKqB,QAAQ1B,EAAc2B,IAAI,SACrC,OAAdtB,KAAKmB,KAAsB,KACxBnB,KAAKmB,KAAKI,gBCRNC,EANiB,WAC9B,OAA8B,OAA1BN,EAAWO,WACNC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAE,GAAAC,OAAK3C,EAAO,WAAZ,YACd,MCcM4C,EAhBU,WACvB,OACEN,EAAAC,EAAAC,cAAA,OAAKK,UAAWC,IAAMxD,QACpBgD,EAAAC,EAAAC,cAACO,EAAD,MACAT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAMN,GAAE,GAAAC,OAAK3C,EAAO,WAAZ,UAAR,QACAsC,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAMN,GAAE,GAAAC,OAAK3C,EAAO,WAAZ,UAAR,QACAsC,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAMN,GAAE,GAAAC,OAAK3C,EAAO,WAAZ,aAAR,WACAsC,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAMN,GAAE,GAAAC,OAAK3C,EAAO,WAAZ,aAAR,WACAsC,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAMN,GAAE,GAAAC,OAAK3C,EAAO,WAAZ,cAAR,cCSSiD,EAFQ,+OAhBZ,+KAEYC,gFAEL,QADRf,EAAQL,EAAWO,kCACC,IAAIc,MAAM,uCAClBC,MAAK,GAAAT,OAAI3C,EAAO,cAAX,aAAA2C,OAAoCO,GAAO,CAChEG,OAAQ,MACRC,QAAS,CACPC,cAAepB,mBAHbqB,kBAMaA,EAAIC,qBAAjBA,2BACCA,6HCuCIC,6MA5CbC,MAAQ,CACNC,OAAQ,GACRC,aAAc,KAEhBC,SAAmB,IAWnBC,iCAAc,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAC,EAAA5B,EAAA6B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACPC,EAAKV,QADE,CAAAO,EAAAE,KAAA,eAAAF,EAAAI,OAAA,iBAAAR,EAAAE,EAAA5B,EAAAmC,KAAA,SAAAT,EAEHC,GAFG,IAAAS,EAAAC,EAAA,OAAAT,EAAA5B,EAAA6B,KAAA,SAAAS,GAAA,cAAAA,EAAAP,KAAAO,EAAAN,MAAA,cAAAM,EAAAP,KAAA,EAAAO,EAAAN,KAAA,EAIgBtB,EAAe6B,eAAeZ,GAJ9C,UAIFS,EAJEE,EAAAE,KAKFH,EAAQI,IAAIC,gBAAgBN,GAC7BH,EAAKV,QANF,CAAAe,EAAAN,KAAA,eAAAM,EAAAJ,OAAA,yBAORD,EAAKU,SAAS,SAAAvB,GACZ,IAAMC,EAASD,EAAMC,OAAOuB,QAE5B,OADAvB,EAAOwB,OAAOlB,EAAG,EAAGU,GACb,CAAEhB,YAVHiB,EAAAN,KAAA,iBAAAM,EAAAP,KAAA,GAAAO,EAAAQ,GAAAR,EAAA,kCAAAA,EAAAS,SAAArB,EAAA,iBAEHC,EAAI,EAFD,YAEIA,EAAIM,EAAKb,MAAME,cAFnB,CAAAQ,EAAAE,KAAA,gBAAAF,EAAAkB,cAAAtB,EAEHC,GAFG,4BAAAG,EAAAgB,GAAA,CAAAhB,EAAAE,KAAA,eAAAF,EAAAI,OAAA,mBAEiCP,IAFjCG,EAAAE,KAAA,gBAeZiB,WAAWhB,EAAKT,YAAa,KAfjB,yBAAAM,EAAAiB,SAAAtB,8MATZpD,KAAKkD,SAAU,WACYb,EAAewC,4BAApC5B,SACDjD,KAAKkD,yDACVlD,KAAKsE,SAAS,CAAErB,iBAChBjD,KAAKmD,+JAGLnD,KAAKkD,SAAU,mCAoBf,OACExB,EAAAC,EAAAC,cAACF,EAAAC,EAAMmD,SAAP,KACEpD,EAAAC,EAAAC,cAACxD,EAAD,MACC4B,KAAK+C,MAAMC,OAAO+B,IAAI,SAACf,EAAOgB,GAAR,OACrBtD,EAAAC,EAAAC,cAAA,OAAKK,UAAWC,IAAM8B,MAAO3E,IAAK2F,EAAKC,IAAI,MAAMC,IAAKlB,cAtCtCmB,IAAMC,mCCqBjBC,EAFM,4NAxBH,QADR9D,EAAQL,EAAWO,kCACC,IAAIc,MAAM,uCAClBC,MAAK,GAAAT,OAAI3C,EAAO,cAAX,oBAA4C,CACjEqD,OAAQ,OACRC,QAAS,CACPC,cAAepB,mBAHbqB,kBAMYA,EAAI0C,qBAAhBC,2BACCA,wPAIO,QADRhE,EAAQL,EAAWO,kCACC,IAAIc,MAAM,uCAClBC,MAAK,GAAAT,OAAI3C,EAAO,cAAX,oBAA4C,CACjEqD,OAAQ,MACRC,QAAS,CACPC,cAAepB,mBAHbqB,kBAMYA,EAAI0C,qBAAhBC,2BACCA,2GCKIC,EA1Bc,WAAM,IAAAC,EACTC,mBAAS,IADAC,EAAAxF,OAAAyF,EAAA,EAAAzF,CAAAsF,EAAA,GAC1BjH,EAD0BmH,EAAA,GACpBE,EADoBF,EAAA,GAE5BnH,GAAM6G,EAAaS,UAAUC,KAAKF,GAFN,IAAAG,EAIHN,mBAAS,IAJNO,EAAA9F,OAAAyF,EAAA,EAAAzF,CAAA6F,EAAA,GAI1BE,EAJ0BD,EAAA,GAIjBE,EAJiBF,EAAA,GAKjC,OACEvE,EAAAC,EAAAC,cAACF,EAAAC,EAAMmD,SAAP,KACEpD,EAAAC,EAAAC,cAACxD,EAAD,MACAsD,EAAAC,EAAAC,cAAA,OAAKK,UAAWC,IAAMnE,WACpB2D,EAAAC,EAAAC,cAAA,SACEwE,KAAK,SACLxF,MAAM,YACNyF,QAAS,kBAAMhB,EAAaiB,WAAWP,KAAKI,MAE9CzE,EAAAC,EAAAC,cAAA,WAAMsE,GACNxE,EAAAC,EAAAC,cAAA,OAAKK,UAAWC,IAAM1D,MACnBA,EACE+H,MAAM,MACNC,UACAC,KAAK,2BCDHC,EAFc,8NAfX,QADRnF,EAAQL,EAAWO,kCACC,IAAIc,MAAM,uCAClBC,MAAK,GAAAT,OAClB3C,EAAO,cADW,6BAErB,CACEqD,OAAQ,OACRC,QAAS,CACPC,cAAepB,mBALfqB,kBASYA,EAAI0C,qBAAhBC,2BACCA,2GCSIoB,EArBW,WAAM,IAAAlB,EACRC,mBAAS,IADDC,EAAAxF,OAAAyF,EAAA,EAAAzF,CAAAsF,EAAA,GACvBF,EADuBI,EAAA,GAClBiB,EADkBjB,EAAA,GAU9B,OACEjE,EAAAC,EAAAC,cAACF,EAAAC,EAAMmD,SAAP,KACEpD,EAAAC,EAAAC,cAACxD,EAAD,MACAsD,EAAAC,EAAAC,cAAA,OAAKK,UAAW4E,IAAO9I,WACrB2D,EAAAC,EAAAC,cAAA,SAAOwE,KAAK,SAASxF,MAAM,cAAcyF,QAX/C,WACEK,EACGI,aACAf,KAAKa,GACLG,MAAMC,QAAQC,MAAMC,KAAKF,aAQxBtF,EAAAC,EAAAC,cAAA,OAAKK,UAAW4E,IAAOpI,UAAW8G,MCS3B4B,EAFQ,kOArBL,QADR5F,EAAQL,EAAWO,kCACC,IAAIc,MAAM,uCAClBC,MAAK,GAAAT,OAClB3C,EAAO,cADW,+BAErB,CACEsD,QAAS,CAAEC,cAAepB,mBAHxBqB,kBAMYA,EAAI0C,qBAAhBC,2BACCA,2PAIO,QADRhE,EAAQL,EAAWO,kCACC,IAAIc,MAAM,uCAClBC,MAAK,GAAAT,OAAI3C,EAAO,cAAX,2BAAmD,CACxEsD,QAAS,CAAEC,cAAepB,mBADtBqB,kBAGYA,EAAI0C,qBAAhBC,2BACCA,2GCAI6B,EAnBiB,WAAM,IAAA3B,EACMC,mBAAS,IADfC,EAAAxF,OAAAyF,EAAA,EAAAzF,CAAAsF,EAAA,GAC7B4B,EAD6B1B,EAAA,GACd2B,EADc3B,EAAA,GAQpC,OANK0B,GACHF,EACGI,iBACAxB,KAAKuB,GACLP,MAAMC,QAAQC,MAAMC,KAAKF,UAG5BtF,EAAAC,EAAAC,cAACF,EAAAC,EAAMmD,SAAP,KACEpD,EAAAC,EAAAC,cAACxD,EAAD,MACAsD,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,OAAK4F,GAAG,UAAUC,wBAAyB,CAAEC,OAAQL,KACrD3F,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,OAAK4F,GAAG,2BCQCG,EAFM,0IAjBPC,EAAkBC,2FACVrF,MAAK,GAAAT,OAAI3C,EAAO,cAAX,cAAsC,CAC3DqD,OAAQ,OACRqF,KAAMpH,KAAKK,UAAU,CACnB6G,WACAC,WACAE,UAAU,IAEZrF,QAAS,CACPsF,eAAgB,oCARdpF,kBAWaA,EAAIqF,qBAAjBA,2BACCA,6GCmCIC,6MAxCbnF,MAAQ,CACNoF,UAAU,EACVP,SAAU,GACVC,SAAU,MAEZO,4CAAQ,SAAAhF,EAAOiF,GAAP,IAAAlH,EAAA,OAAAoC,EAAA5B,EAAA6B,KAAA,SAAAS,GAAA,cAAAA,EAAAP,KAAAO,EAAAN,MAAA,cACN0E,EAAEC,iBADIrE,EAAAN,KAAA,EAEagE,EAAaS,MAC9BxE,EAAKb,MAAM6E,SACXhE,EAAKb,MAAM8E,UAJP,OAEA1G,EAFA8C,EAAAE,KAMNjD,EAAWG,QAAQF,GACnByC,EAAKU,SAAS,IAPR,wBAAAL,EAAAS,SAAAtB,oIASC,IAAAmF,EAAAvI,KACP,OAA8B,OAA1BkB,EAAWO,WACNC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAI1C,EAAO,aAE5BsC,EAAAC,EAAAC,cAAA,OAAKK,UAAWC,IAAMnE,WACpB2D,EAAAC,EAAAC,cAAA,QAAM4G,SAAUxI,KAAKoI,OACnB1G,EAAAC,EAAAC,cAAA,OAAKK,UAAWC,IAAM9D,QAAtB,SACAsD,EAAAC,EAAAC,cAAA,SACE6G,YAAY,WACZrC,KAAK,OACLsC,KAAK,WACLC,SAAU,SAAAN,GAAC,OAAIE,EAAKjE,SAAS,CAAEsD,SAAUS,EAAEO,OAAOhI,WAEpDc,EAAAC,EAAAC,cAAA,SACE6G,YAAY,WACZrC,KAAK,WACLsC,KAAK,WACLC,SAAU,SAAAN,GAAC,OAAIE,EAAKjE,SAAS,CAAEuD,SAAUQ,EAAEO,OAAOhI,WAEpDc,EAAAC,EAAAC,cAAA,SAAOK,UAAWC,IAAM/D,OAAQiI,KAAK,SAASsC,KAAK,oBAlCzCvD,IAAMC,WCFXyD,EATQ,WACrB,OACEnH,EAAAC,EAAAC,cAACF,EAAAC,EAAMmD,SAAP,KACEpD,EAAAC,EAAAC,cAACxD,EAAD,MACAsD,EAAAC,EAAAC,cAAA,qBCGSkH,EALU,WAEvB,OADA5H,EAAW6H,YACJrH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAE,GAAAC,OAAK3C,EAAO,WAAZ,aCUN4J,EAFQ,gJAXH7J,gFAEF,QADRoC,EAAQL,EAAWO,kCACC,IAAIc,MAAM,uCAClBC,MAAK,GAAAT,OAAI3C,EAAO,aAAcD,GAAzB,gBAA6C,CAClEuD,QAAS,CAAEC,cAAepB,mBADtBqB,kBAGaA,EAAI0C,qBAAjBA,2BACCA,6HCNP2D,EAAc,EACZC,EAAmB,IAkDVC,GAhDwB,WAAM,IAAA1D,EACrBC,qBADqBC,EAAAxF,OAAAyF,EAAA,EAAAzF,CAAAsF,EAAA,GACpCtG,EADoCwG,EAAA,GAC/ByD,EAD+BzD,EAAA,YAG5B0D,IAH4B,OAAAC,EAAAC,MAAAvJ,KAAAV,WAAA,SAAAgK,IAAA,OAAAA,EAAAnJ,OAAAqJ,EAAA,EAAArJ,CAAAoD,EAAA5B,EAAAmC,KAG3C,SAAAV,IAAA,IAAArD,EAAA0J,EAAAC,EAAApG,EAAAqG,EAAA,OAAApG,EAAA5B,EAAA6B,KAAA,SAAAS,GAAA,cAAAA,EAAAP,KAAAO,EAAAN,MAAA,UACQ5D,EAAMD,KAAKC,QACbkJ,EAAcC,EAAmBnJ,GAFvC,CAAAkE,EAAAN,KAAA,eAAAM,EAAAJ,OAAA,SAGWe,WAAWyE,EAAqB,MAH3C,OAIEJ,EAAclJ,EAER0J,EAA2B,CAAC,MAAO,QAAS,QAC9CC,GAAW,EACNpG,EAAI,EARf,YAQkBA,EAAImG,EAAYlK,QARlC,CAAA0E,EAAAN,KAAA,gBAAAM,EAAAP,KAAA,EAUYvE,EAAMsK,EAAYnG,GAV9BW,EAAAN,KAAA,GAWYqF,EAAeY,YAAYzK,GAXvC,eAYMiK,EAAOjK,GACPD,EAAaC,GACbuK,GAAW,EAdjBzF,EAAAJ,OAAA,oBAAAI,EAAAP,KAAA,GAAAO,EAAAQ,GAAAR,EAAA,iBAQ0CX,IAR1CW,EAAAN,KAAA,gBAkBO+F,IACHN,EAAO,WACPlK,EAAa,SAGf0F,WAAWyE,EAAqB,KAvBlC,yBAAApF,EAAAS,SAAAtB,EAAA,mBAH2CmG,MAAAvJ,KAAAV,WA6B3C,IAAKH,EAEH,OADAkK,IACO,KAGT,IAAMQ,EACI,SAAR1K,EACI0H,IAAO/I,KACC,UAARqB,EACA0H,IAAOhJ,MACC,YAARsB,EACA0H,IAAOjJ,IACC,QAARuB,EACA0H,IAAOlJ,MACP,GAEN,OAAO+D,EAAAC,EAAAC,cAAA,OAAKK,UAAW,CAAC4E,IAAOnJ,OAAQmM,GAAOpD,KAAK,8CCnBtCqD,GAFc,uNA1BX,QADRvI,EAAQL,EAAWO,kCACC,IAAIc,MAAM,uCAClBC,MAAK,GAAAT,OAAI3C,EAAO,cAAX,wBAAgD,CACrEsD,QAAS,CACPC,cAAepB,mBAFbqB,kBAKYA,EAAIqF,qBAAhB1C,2BACCA,qKAGCwE,gFAEM,QADRxI,EAAQL,EAAWO,kCACC,IAAIc,MAAM,uCAClBC,MAAK,GAAAT,OAAI3C,EAAO,cAAX,wBAAgD,CACrEqD,OAAQ,MACRC,QAAS,CACPC,cAAepB,EACfyG,eAAgB,oBAElBF,KAAMpH,KAAKK,UAAUgJ,mBANjBnH,kBAQYA,EAAIqF,qBAAhB1C,2BACCA,4GC1BLyE,UAAgB,IAAIC,IAAI,CAAC,SACzBC,GAAkB,IAAID,IAAI,CAAC,KAAM,KAAM,KAAM,OAOnD,SAASE,GAAYC,GACnB,MAAmB,kBAARA,EAAyBA,EAC7BA,EACJ7D,MAAM,KACNxB,IAAI,SAAAsF,GAAI,OAVMD,EAWFC,GAVP9K,QAAU,IAAM2K,GAAgBI,IAAIF,EAAIG,gBAC5CP,GAAcM,IAAIF,EAAII,eAWlBH,EADAA,EAAK,GAAGG,cAAgBH,EAAK9F,MAAM,GAAGgG,cAZhD,IAAmBH,IAed3D,KAAK,6BCEKgE,GAbqB,SAAAC,GAClC,OACEhJ,EAAAC,EAAAC,cAAA,QACEK,UAAW,CAAC4E,KAAO9I,UAAW2M,EAAM9J,MAAQiG,KAAOxI,SAAW,IAAIoI,KAChE,KAEFJ,QAAS,kBAAMqE,EAAM/B,UAAU+B,EAAM9J,SAErCc,EAAAC,EAAAC,cAAA,OAAKK,UAAW4E,KAAOvI,6BCOdqM,GAfqC,SAAAD,GAKlD,OACEhJ,EAAAC,EAAAC,cAAA,SACEwE,KAAK,OACLnE,UAAW4E,KAAO9I,UAClB4K,SAAU,SAAAN,GAAC,OAAIqC,EAAM/B,UARFiC,EAQyBvC,EAAEO,OAAOhI,MAP5B,kBAAhB8J,EAAM9J,MAA2BiK,WAAWD,GAChDA,IAFa,IAACA,GASnBhK,MAAO8J,EAAM9J,SCoCJkK,GAvCY,WAAM,IAAArF,EACHC,mBAAS,IADNC,EAAAxF,OAAAyF,EAAA,EAAAzF,CAAAsF,EAAA,GACxBrG,EADwBuG,EAAA,GAChBoF,EADgBpF,EAAA,GAG3BqF,EAAgB,EACdC,EAAW,SAAC5L,GAAD,OAAiB,SAACuB,GACjC,IAAMsK,EAAQ/K,OAAAgL,GAAA,EAAAhL,CAAA,GAAQf,EAARe,OAAAiL,GAAA,EAAAjL,CAAA,GAAiBd,EAAMuB,IACrCmK,EAAUG,GACVG,aAAaL,GACbA,EAAgBM,OAAO1G,WACrB,kBAAMkF,GAAqByB,IAAIL,IAC/B,OAQJ,OAJK/K,OAAOC,KAAKhB,GAAQG,QACvBuK,GAAqBxI,MAAMyE,KAAKgF,GAIhCrJ,EAAAC,EAAAC,cAACF,EAAAC,EAAMmD,SAAP,KACEpD,EAAAC,EAAAC,cAACxD,EAAD,MACAsD,EAAAC,EAAAC,cAAA,OAAKK,UAAW4E,KAAO9I,WACpBoC,OAAOC,KAAKhB,GAAQ2F,IAAI,SAAA1F,GAAG,OAC1BqC,EAAAC,EAAAC,cAAA,OAAKvC,IAAKA,EAAK4C,UAAW4E,KAAO7I,KAC/B0D,EAAAC,EAAAC,cAAA,OAAKK,UAAW4E,KAAO5I,MA3BlB,SAACuN,GAAD,OACfrB,GHUmB,kBADMC,EAwC3B,SAAqBA,GACnB,IAAIqB,GAAc,EAClB,OAAOrB,EACJ7D,MAAM,IACNxB,IAAI,SAAA2G,GACH,OAAIA,EAAKlB,gBAAkBkB,EACrBD,EAAoBC,EAAKnB,eAC7BkB,GAAc,EACP,IAAMC,EAAKnB,gBAElBkB,GAAc,EACPC,EAAKnB,iBAGf9D,KAAK,IG/DsBkF,CAAYH,IHUNpB,EAC7BA,EAAIwB,QAAQ,KAAM,MAF3B,IAA2BxB,EGiBeyB,CAASxM,IACvCqC,EAAAC,EAAAC,cAAA,OAAKK,UAAW4E,KAAO3I,OACG,mBAAhBkB,EAAOC,GACbqC,EAAAC,EAAAC,cAACkK,GAAD,CAAQlL,MAAOxB,EAAOC,GAAMsJ,SAAUsC,EAAS5L,KAE/CqC,EAAAC,EAAAC,cAACmK,GAAD,CAAOnL,MAAOxB,EAAOC,GAAMsJ,SAAUsC,EAAS5L,gCCJ/C2M,GAFQ,0NA1BL,QADRzK,EAAQL,EAAWO,kCACC,IAAIc,MAAM,uCAClBC,MAAK,GAAAT,OAAI3C,EAAO,cAAX,gBAAwC,CAC7DsD,QAAS,CACPC,cAAepB,mBAFbqB,kBAKYA,EAAIqF,qBAAhB1C,2BACCA,EAAI0G,2KAGHzE,EAAY0E,gFAEN,QADR3K,EAAQL,EAAWO,kCACC,IAAIc,MAAM,uCAClBC,MAAK,GAAAT,OAAI3C,EAAO,cAAX,iBAAA2C,OAAwCyF,GAAM,CACnE/E,OAAQ,MACRC,QAAS,CACPC,cAAepB,EACfyG,eAAgB,oBAElBF,KAAMpH,KAAKK,UAAUmL,mBANjBtJ,kBAQYA,EAAIqF,qBAAhB1C,2BACCA,8GCQI4G,GApCW,WAAM,IAAA1G,EACMC,mBAAS,IADfC,EAAAxF,OAAAyF,EAAA,EAAAzF,CAAAsF,EAAA,GACvB2G,EADuBzG,EAAA,GACX0G,EADW1G,EAAA,GAGzByG,EAAW7M,QACdyM,GAAeM,SAASvG,KAAKsG,GAa/B,OACE3K,EAAAC,EAAAC,cAACF,EAAAC,EAAMmD,SAAP,KACEpD,EAAAC,EAAAC,cAACxD,EAAD,MACAsD,EAAAC,EAAAC,cAAA,OAAKK,UAAW4E,KAAO9I,WACpBqO,EAAWrH,IAAI,SAAAmH,GAAM,OACpBxK,EAAAC,EAAAC,cAAA,OAAKvC,IAAK6M,EAAO1E,GAAIvF,UAAW4E,KAAO7I,KACrC0D,EAAAC,EAAAC,cAAA,OAAKK,UAAW4E,KAAO5I,MAAOiO,EAAOxD,MACrChH,EAAAC,EAAAC,cAAA,OAAKK,UAAW4E,KAAO3I,OACK,mBAAlBgO,EAAOK,OACb7K,EAAAC,EAAAC,cAACkK,GAAD,CAAQlL,MAAOsL,EAAOK,OAAQ5D,UAnB1BnB,EAmB6C0E,EAAO1E,GAnBrC,SAAC+E,GAChC,IAAMvH,EAAMoH,EAAWI,UAAU,SAAAC,GAAC,OAAIA,EAAEjF,KAAOA,IACzC0E,EAAM/L,OAAAgL,GAAA,EAAAhL,CAAA,GAAQiM,EAAWpH,IAC/BkH,EAAOK,OAASA,EAChB,IAAMG,EAAON,EAAW7H,QACxBmI,EAAKlI,OAAOQ,EAAK,EAAGkH,GACpBF,GAAeT,IAAIW,EAAO1E,GAAI,CAAE+E,WAChCF,EAAcK,OAaA,OApBC,IAAClF,OC0BLmF,GAzBO,WACpB,OACEjL,EAAAC,EAAAC,cAACQ,EAAA,EAAD,KACEV,EAAAC,EAAAC,cAACgL,GAAD,MACAlL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOgL,KAAMzN,EAAO,WAAY0N,OAAK,EAACC,UAAWlE,IACjDnH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOgL,KAAI,GAAA9K,OAAK3C,EAAO,WAAZ,UAAgC0N,OAAK,EAACC,UAAW7E,IAC5DxG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOgL,KAAI,GAAA9K,OAAK3C,EAAO,WAAZ,WAAiC0N,OAAK,EAACC,UAAWjE,IAC7DpH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOgL,KAAI,GAAA9K,OAAK3C,EAAO,WAAZ,SAA+B0N,OAAK,EAACC,UAAWjK,IAC3DpB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOgL,KAAI,GAAA9K,OAAK3C,EAAO,WAAZ,SAA+B0N,OAAK,EAACC,UAAWvH,IAC3D9D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOgL,KAAI,GAAA9K,OAAK3C,EAAO,WAAZ,YAAkC0N,OAAK,EAACC,UAAWpG,IAC9DjF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOgL,KAAI,GAAA9K,OAAK3C,EAAO,WAAZ,YAAkC0N,OAAK,EAACC,UAAWZ,KAC9DzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgL,KAAI,GAAA9K,OAAK3C,EAAO,WAAZ,aACJ0N,OAAK,EACLC,UAAWjC,KAEbpJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgL,KAAI,GAAA9K,OAAK3C,EAAO,WAAZ,WACJ0N,OAAK,EACLC,UAAW3F,MCrBb4F,GAAcC,QACW,cAA7B3B,OAAO4B,SAASC,UAEe,UAA7B7B,OAAO4B,SAASC,UAEhB7B,OAAO4B,SAASC,SAASC,MACvB,2DA8CN,SAASC,GAAgBC,EAAelO,GACtCmO,UAAUC,cACPC,SAASH,GACTvH,KAAK,SAAA2H,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB7K,QACfwK,UAAUC,cAAcO,YAI1B/G,QAAQgH,IACN,iHAKE5O,GAAUA,EAAO6O,UACnB7O,EAAO6O,SAASP,KAMlB1G,QAAQgH,IAAI,sCAGR5O,GAAUA,EAAO8O,WACnB9O,EAAO8O,UAAUR,UAO5B3G,MAAM,SAAAE,GACLD,QAAQC,MAAM,4CAA6CA,KClGjEkH,IAASC,OAAO1M,EAAAC,EAAAC,cAACyM,GAAD,MAASC,SAASC,eAAe,SDqB1C,SAAkBnP,GACvB,GAA6C,kBAAmBmO,UAAW,CAMzE,GAJkB,IAAInJ,IACnBoK,QACDlD,OAAO4B,SAASuB,MAEJC,SAAWpD,OAAO4B,SAASwB,OAIvC,OAGFpD,OAAOqD,iBAAiB,OAAQ,WAC9B,IAAMrB,EAAK,GAAAvL,OAAMyM,QAAN,sBAEPxB,IAgEV,SAAiCM,EAAelO,GAE9CoD,MAAM8K,GACHvH,KAAK,SAAAtH,GAEJ,IAAMmQ,EAAcnQ,EAASiE,QAAQpB,IAAI,gBAEnB,MAApB7C,EAAS8N,QACO,MAAfqC,IAA8D,IAAvCA,EAAYC,QAAQ,cAG5CtB,UAAUC,cAAcsB,MAAM/I,KAAK,SAAA2H,GACjCA,EAAaqB,aAAahJ,KAAK,WAC7BuF,OAAO4B,SAAS8B,aAKpB3B,GAAgBC,EAAOlO,KAG1B2H,MAAM,WACLC,QAAQgH,IACN,mEArFAiB,CAAwB3B,EAAOlO,GAI/BmO,UAAUC,cAAcsB,MAAM/I,KAAK,WACjCiB,QAAQgH,IACN,gHAMJX,GAAgBC,EAAOlO,MC/C/BoO","file":"static/js/main.f5b9c9b5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"circle\":\"environmentSelection_circle__l0Qp0\",\"black\":\"environmentSelection_black__QRZ3m\",\"red\":\"environmentSelection_red__1TNHM\",\"green\":\"environmentSelection_green__1q5Hi\",\"blue\":\"environmentSelection_blue__Zr7r6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"settings_container__2b3Xy\",\"row\":\"settings_row__29TVG\",\"left\":\"settings_left__3gktj\",\"right\":\"settings_right__EtW60\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"devices_container__3za6S\",\"row\":\"devices_row__Jdyr9\",\"left\":\"devices_left__1u2ah\",\"right\":\"devices_right__3WGSQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"login_container__KfNrD\",\"submit\":\"login_submit__1Cw2a\",\"header\":\"login_header__2p1Rx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"toggle_container__3iGg6\",\"selected\":\"toggle_selected__uWjCN\",\"knob\":\"toggle_knob__16LKp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"gateOpener_container__2XCM_\",\"hidden\":\"gateOpener_hidden__a1Usl\",\"logs\":\"gateOpener_logs__1QQ2T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"doorman_container__3ecA5\",\"response\":\"doorman_response__3hBwc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"header_navbar__2pgbU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"input_container__2oOob\"};","/**\n *\n * DNS artem.redirectme.net for 24.7.88.154\n * https://my.noip.com/#!/dynamic-dns\n *\n * SSL Cert for artem.redirectme.net\n * https://www.sslforfree.com/certificates\n *\n * Port forwarding for 443 to 192.168.50.253:8084\n * http://192.168.50.1/Advanced_VirtualServer_Content.asp\n *\n */\n\nconst configValues = {\n  // local: {\n  //   serverPath: \"https://192.168.50.253:8084\",\n  //   appRoot: \"/home\"\n  // },\n  local: {\n    serverPath: \"https://artem.redirectme.net\",\n    appRoot: \"/home\"\n  },\n  prod: {\n    serverPath: \"https://artemcams.serveo.net\",\n    appRoot: \"/home\"\n  },\n  dev: {\n    serverPath: \"http://localhost:8082\",\n    appRoot: \"/home\"\n  }\n};\n\ntype ConfigValues = typeof configValues;\nexport type ConfigEnv = keyof ConfigValues;\nexport type ConfigTypes = keyof ConfigValues[\"local\"];\n\nlet currentEnv: ConfigEnv = \"dev\";\n\nfunction setConfigEnv(env: ConfigEnv) {\n  currentEnv = env;\n}\n\nconst config = <T extends ConfigTypes>(\n  key: T,\n  env: ConfigEnv = currentEnv\n): ConfigValues[\"local\"][T] => {\n  return configValues[env][key];\n};\n\nexport default config;\nexport { setConfigEnv };\n","interface StorageItem {\n  expiration: number;\n  value: any;\n}\n\ninterface DataStore {\n  [prop: string]: StorageItem;\n}\n\nconst USE_LOCAL_STORE = typeof localStorage !== \"undefined\";\nconst LOCAL_STORE_KEY = \"ARTEM_DATA_STORE\";\nconst VALUE_EXPIRATION = 14 * 24 * 60 * 60 * 1000;\nconst EXPIRATION_CHECK_INTERVAL = 60 * 60 * 1000;\n\nclass StorageHelper {\n  memoryStore: DataStore = {};\n  lastExpirationCheck = 0;\n  _checkForExpired() {\n    if (Date.now() < this.lastExpirationCheck + EXPIRATION_CHECK_INTERVAL)\n      return;\n    this.lastExpirationCheck = Date.now();\n    const store = this._getStore();\n    Object.keys(store).forEach(key => {\n      if (store[key].expiration < Date.now()) delete store[key];\n    });\n    this._setStore(store);\n  }\n\n  _getStore(): DataStore {\n    if (USE_LOCAL_STORE) {\n      const dataStr = localStorage.getItem(LOCAL_STORE_KEY);\n      if (dataStr) return JSON.parse(dataStr);\n    }\n    return this.memoryStore;\n  }\n\n  _setStore(value: DataStore) {\n    this._checkForExpired();\n    this.memoryStore = value;\n    if (USE_LOCAL_STORE) {\n      localStorage.setItem(LOCAL_STORE_KEY, JSON.stringify(value));\n    }\n  }\n\n  set(key: string, value: any, expiration = VALUE_EXPIRATION) {\n    const store = this._getStore();\n    store[key] = {\n      expiration: Date.now() + expiration,\n      value\n    };\n    this._setStore(store);\n    return value;\n  }\n\n  get(key: string) {\n    const data = this._getStore()[key];\n    if (!data) return;\n    if (data.expiration < Date.now()) return this.clear(key);\n    return data.value;\n  }\n\n  clear(key: string) {\n    const data = this._getStore();\n    delete data[key];\n    this._setStore(data);\n  }\n}\n\nconst storageHelper = new StorageHelper();\nexport default storageHelper;\nexport { StorageHelper };\n","import storageHelper from \"./storageHelper\";\n\ninterface Auth {\n  token: string;\n}\n\nclass AuthHelper {\n  auth: Auth | null = null;\n  setAuth(auth: Auth) {\n    this.auth = auth || null;\n    storageHelper.set(\"auth\", auth);\n  }\n  clearAuth() {\n    this.auth = null;\n    storageHelper.clear(\"auth\");\n  }\n  getToken() {\n    if (this.auth === null) this.setAuth(storageHelper.get(\"auth\"));\n    if (this.auth === null) return null;\n    return this.auth.token;\n  }\n}\n\nconst authHelper = new AuthHelper();\nexport default authHelper;\nexport { AuthHelper };\n","import React from \"react\";\nimport { Redirect } from \"react-router\";\nimport authHelper from \"../../utils/authHelper\";\nimport config from \"../../config\";\n\nconst LoginRequired: React.FC = () => {\n  if (authHelper.getToken() === null)\n    return <Redirect to={`${config(\"appRoot\")}/login`} />;\n  return null;\n};\n\nexport default LoginRequired;\n","import React from \"react\";\nimport style from \"./header.module.css\";\nimport { Link } from \"react-router-dom\";\nimport config from \"../../config\";\nimport LoginRequired from \"../loginRequired/loginRequired\";\n\nconst Header: React.FC = () => {\n  return (\n    <div className={style.navbar}>\n      <LoginRequired />\n      <Link to={`${config(\"appRoot\")}/cams`}>Cams</Link>\n      <Link to={`${config(\"appRoot\")}/gate`}>Gate</Link>\n      <Link to={`${config(\"appRoot\")}/doorman`}>Doorman</Link>\n      <Link to={`${config(\"appRoot\")}/devices`}>Devices</Link>\n      <Link to={`${config(\"appRoot\")}/settings`}>Settings</Link>\n      {/* <Link to={`${config(\"appRoot\")}/nearby`}>Nearby</Link> */}\n      {/* <Link to={`${config(\"appRoot\")}/login`}>Login</Link> */}\n      {/* <Link to={`${config(\"appRoot\")}/logout`}>Logout</Link> */}\n    </div>\n  );\n};\n\nexport default Header;\n","import config from \"../config\";\nimport authHelper from \"../utils/authHelper\";\n\nclass CameraProvider {\n  async getTotalCameras() {\n    return 3;\n  }\n  async getCameraImage(cam: number): Promise<Blob> {\n    const token = authHelper.getToken();\n    if (token === null) throw new Error(\"UNAUTHORIZED\");\n    const res = await fetch(`${config(\"serverPath\")}/api/img/${cam}`, {\n      method: \"GET\",\n      headers: {\n        Authorization: token // \"Bearer \" + authHelper.getToken()\n      }\n    });\n    const blob = await res.blob();\n    return blob;\n  }\n}\n\nconst cameraProvider = new CameraProvider();\n\nexport default cameraProvider;\nexport { CameraProvider };\n","import React from \"react\";\nimport Header from \"../../components/header/header\";\nimport cameraProvider from \"../../providers/cameraProvider\";\nimport style from \"./viewCameras.module.css\";\n\ninterface ViewCamerasProps {}\ninterface ViewCamerasState {\n  images: string[];\n  totalCameras: number;\n}\n\nclass ViewCameras extends React.Component<ViewCamerasProps, ViewCamerasState> {\n  state = {\n    images: [],\n    totalCameras: 0\n  };\n  mounted: boolean = false;\n  async componentDidMount() {\n    this.mounted = true;\n    const totalCameras = await cameraProvider.getTotalCameras();\n    if (!this.mounted) return;\n    this.setState({ totalCameras });\n    this.fetchImages();\n  }\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n  fetchImages = async () => {\n    if (!this.mounted) return;\n    for (let i = 0; i < this.state.totalCameras; i++) {\n      try {\n        const imageBlob = await cameraProvider.getCameraImage(i);\n        const image = URL.createObjectURL(imageBlob);\n        if (!this.mounted) break;\n        this.setState(state => {\n          const images = state.images.slice();\n          images.splice(i, 1, image);\n          return { images };\n        });\n      } catch (e) {}\n    }\n\n    setTimeout(this.fetchImages, 1000);\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <Header />\n        {this.state.images.map((image, idx) => (\n          <img className={style.image} key={idx} alt=\"cam\" src={image} />\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ViewCameras;\n","import config from \"../config\";\nimport authHelper from \"../utils/authHelper\";\n\nclass GateProvider {\n  async openGate(): Promise<string> {\n    const token = authHelper.getToken();\n    if (token === null) throw new Error(\"UNAUTHORIZED\");\n    const res = await fetch(`${config(\"serverPath\")}/api/keypad/open`, {\n      method: \"POST\",\n      headers: {\n        Authorization: token // \"Bearer \" + authHelper.getToken()\n      }\n    });\n    const msg = await res.text();\n    return msg;\n  }\n  async getLogs(): Promise<string> {\n    const token = authHelper.getToken();\n    if (token === null) throw new Error(\"UNAUTHORIZED\");\n    const res = await fetch(`${config(\"serverPath\")}/api/keypad/logs`, {\n      method: \"GET\",\n      headers: {\n        Authorization: token // \"Bearer \" + authHelper.getToken()\n      }\n    });\n    const msg = await res.text();\n    return msg;\n  }\n}\n\nconst gateProvider = new GateProvider();\n\nexport default gateProvider;\nexport { GateProvider };\n","import React, { useState } from \"react\";\nimport Header from \"../../components/header/header\";\nimport style from \"./gateOpener.module.css\";\nimport gateProvider from \"../../providers/gateProvider\";\n\nconst GateOpener: React.FC = () => {\n  const [logs, setLogs] = useState(\"\");\n  if (!logs) gateProvider.getLogs().then(setLogs);\n\n  const [openRes, setOpenRes] = useState(\"\");\n  return (\n    <React.Fragment>\n      <Header />\n      <div className={style.container}>\n        <input\n          type=\"submit\"\n          value=\"Open Gate\"\n          onClick={() => gateProvider.openGate().then(setOpenRes)}\n        />\n        <div>{openRes}</div>\n        <div className={style.logs}>\n          {logs\n            .split(\"\\n\")\n            .reverse()\n            .join(\"\\n\")}\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default GateOpener;\n","import config from \"../config\";\nimport authHelper from \"../utils/authHelper\";\n\nclass AnnouncementProvider {\n  async comingHome(): Promise<string> {\n    const token = authHelper.getToken();\n    if (token === null) throw new Error(\"UNAUTHORIZED\");\n    const res = await fetch(\n      `${config(\"serverPath\")}/api/announce/coming_home`,\n      {\n        method: \"POST\",\n        headers: {\n          Authorization: token // \"Bearer \" + authHelper.getToken()\n        }\n      }\n    );\n    const msg = await res.text();\n    return msg;\n  }\n}\n\nconst announcementProvider = new AnnouncementProvider();\n\nexport default announcementProvider;\nexport { AnnouncementProvider };\n","import React, { useState } from \"react\";\nimport Header from \"../../components/header/header\";\nimport styles from \"./doorman.module.css\";\nimport announcementProvider from \"../../providers/announcementProvider\";\n\nconst Doorman: React.FC = () => {\n  const [msg, setMsg] = useState(\"\");\n\n  function clickHandler() {\n    announcementProvider\n      .comingHome()\n      .then(setMsg)\n      .catch(console.error.bind(console));\n  }\n\n  return (\n    <React.Fragment>\n      <Header />\n      <div className={styles.container}>\n        <input type=\"submit\" value=\"Coming Home\" onClick={clickHandler} />\n        <div className={styles.response}>{msg}</div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Doorman;\n","import config from \"../config\";\nimport authHelper from \"../utils/authHelper\";\n\nclass BeaconProvider {\n  async currentDevices(): Promise<string> {\n    const token = authHelper.getToken();\n    if (token === null) throw new Error(\"UNAUTHORIZED\");\n    const res = await fetch(\n      `${config(\"serverPath\")}/api/nearby_devices/current`,\n      {\n        headers: { Authorization: token }\n      }\n    );\n    const msg = await res.text();\n    return msg;\n  }\n  async allDevices(): Promise<string> {\n    const token = authHelper.getToken();\n    if (token === null) throw new Error(\"UNAUTHORIZED\");\n    const res = await fetch(`${config(\"serverPath\")}/api/nearby_devices/all`, {\n      headers: { Authorization: token }\n    });\n    const msg = await res.text();\n    return msg;\n  }\n}\n\nconst beaconProvider = new BeaconProvider();\n\nexport default beaconProvider;\nexport { BeaconProvider };\n","import React, { useState } from \"react\";\nimport Header from \"../../components/header/header\";\nimport beaconProvider from \"../../providers/beaconProvider\";\n\nconst NearbyDevices: React.FC = () => {\n  const [nearbyDevices, setNearbyDevices] = useState(\"\");\n  if (!nearbyDevices) {\n    beaconProvider\n      .currentDevices()\n      .then(setNearbyDevices)\n      .catch(console.error.bind(console));\n  }\n  return (\n    <React.Fragment>\n      <Header />\n      <h1>Nearby Devices</h1>\n      <div id=\"current\" dangerouslySetInnerHTML={{ __html: nearbyDevices }} />\n      <h1>All Devices</h1>\n      <div id=\"all\" />\n    </React.Fragment>\n  );\n};\n\nexport default NearbyDevices;\n","import config from \"../config\";\n\ninterface LoginResponse {\n  token: string;\n}\n\nclass AuthProvider {\n  async login(username: string, password: string): Promise<LoginResponse> {\n    const res = await fetch(`${config(\"serverPath\")}/api/login`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        username,\n        password,\n        redirect: false\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const json = await res.json();\n    return json;\n  }\n}\n\nconst authProvider = new AuthProvider();\n\nexport default authProvider;\nexport { AuthProvider };\n","import React from \"react\";\nimport style from \"./login.module.css\";\nimport authProvider from \"../../providers/authProvider\";\nimport authHelper from \"../../utils/authHelper\";\nimport { Redirect } from \"react-router\";\nimport config from \"../../config\";\n\ninterface LoginProps {}\ninterface LoginState {\n  loggedIn: boolean;\n  username: string;\n  password: string;\n}\n\nclass Login extends React.Component<LoginProps, LoginState> {\n  state = {\n    loggedIn: false,\n    username: \"\",\n    password: \"\"\n  };\n  login = async (e: React.FormEvent) => {\n    e.preventDefault();\n    const auth = await authProvider.login(\n      this.state.username,\n      this.state.password\n    );\n    authHelper.setAuth(auth);\n    this.setState({});\n  };\n  render() {\n    if (authHelper.getToken() !== null)\n      return <Redirect to={config(\"appRoot\")} />;\n    return (\n      <div className={style.container}>\n        <form onSubmit={this.login}>\n          <div className={style.header}>Login</div>\n          <input\n            placeholder=\"Username\"\n            type=\"text\"\n            name=\"username\"\n            onChange={e => this.setState({ username: e.target.value })}\n          />\n          <input\n            placeholder=\"Password\"\n            type=\"password\"\n            name=\"password\"\n            onChange={e => this.setState({ password: e.target.value })}\n          />\n          <input className={style.submit} type=\"submit\" name=\"submit\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React from \"react\";\nimport Header from \"../../components/header/header\";\n\nconst Home: React.FC = () => {\n  return (\n    <React.Fragment>\n      <Header />\n      <div>Home</div>\n    </React.Fragment>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport authHelper from \"../../utils/authHelper\";\nimport { Redirect } from \"react-router\";\nimport config from \"../../config\";\n\nconst Logout: React.FC = () => {\n  authHelper.clearAuth();\n  return <Redirect to={`${config(\"appRoot\")}/login`} />;\n};\n\nexport default Logout;\n","import config, { ConfigEnv } from \"../config\";\nimport authHelper from \"../utils/authHelper\";\n\nclass HealthProvider {\n  async healthcheck(env?: ConfigEnv): Promise<string> {\n    const token = authHelper.getToken();\n    if (token === null) throw new Error(\"UNAUTHORIZED\");\n    const res = await fetch(`${config(\"serverPath\", env)}/healthcheck`, {\n      headers: { Authorization: token }\n    });\n    const text = await res.text();\n    return text;\n  }\n}\n\nconst healthProvider = new HealthProvider();\n\nexport default healthProvider;\nexport { HealthProvider };\n","import React, { useState } from \"react\";\nimport { ConfigEnv, setConfigEnv } from \"../../config\";\nimport healthProvider from \"../../providers/healthProvider\";\nimport styles from \"./environmentSelection.module.css\";\n\nlet lastRefresh = 0;\nconst REFRESH_INTERVAL = 60 * 1000;\n\nconst EnvironmentSelection: React.FC = () => {\n  const [env, setEnv] = useState();\n\n  async function findBestEnvironment() {\n    const now = Date.now();\n    if (lastRefresh + REFRESH_INTERVAL > now)\n      return setTimeout(findBestEnvironment, 1000);\n    lastRefresh = now;\n\n    const envPriority: ConfigEnv[] = [\"dev\", \"local\", \"prod\"];\n    let foundEnv = false;\n    for (let i = 0; i < envPriority.length; i++) {\n      try {\n        const env = envPriority[i];\n        await healthProvider.healthcheck(env);\n        setEnv(env);\n        setConfigEnv(env);\n        foundEnv = true;\n        break;\n      } catch (e) {}\n    }\n    if (!foundEnv) {\n      setEnv(\"offline\");\n      setConfigEnv(\"prod\");\n    }\n\n    setTimeout(findBestEnvironment, 1000);\n  }\n\n  if (!env) {\n    findBestEnvironment();\n    return null;\n  }\n\n  const color =\n    env === \"prod\"\n      ? styles.blue\n      : env === \"local\"\n      ? styles.green\n      : env === \"offline\"\n      ? styles.red\n      : env === \"dev\"\n      ? styles.black\n      : \"\";\n\n  return <div className={[styles.circle, color].join(\" \")} />;\n};\n\nexport default EnvironmentSelection;\n","import config from \"../config\";\nimport authHelper from \"../utils/authHelper\";\n\nclass FastPropertyProvider {\n  async get(): Promise<any> {\n    const token = authHelper.getToken();\n    if (token === null) throw new Error(\"UNAUTHORIZED\");\n    const res = await fetch(`${config(\"serverPath\")}/api/fast_properties`, {\n      headers: {\n        Authorization: token\n      }\n    });\n    const msg = await res.json();\n    return msg;\n  }\n\n  async put(properties: any): Promise<any> {\n    const token = authHelper.getToken();\n    if (token === null) throw new Error(\"UNAUTHORIZED\");\n    const res = await fetch(`${config(\"serverPath\")}/api/fast_properties`, {\n      method: \"PUT\",\n      headers: {\n        Authorization: token,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(properties)\n    });\n    const msg = await res.json();\n    return msg;\n  }\n}\n\nconst fastPropertyProvider = new FastPropertyProvider();\n\nexport default fastPropertyProvider;\nexport { FastPropertyProvider };\n","import moment from \"moment-timezone\";\n\nconst knownAcronyms = new Set([\"CCM\"]);\nconst knownShortWords = new Set([\"up\", \"of\", \"in\", \"on\"]);\nfunction isAcronym(str: string) {\n  if (str.length <= 2 && !knownShortWords.has(str.toLowerCase())) return true;\n  if (knownAcronyms.has(str.toUpperCase())) return true;\n  return false;\n}\n\nfunction toTitleCase(str: string) {\n  if (typeof str !== \"string\") return str;\n  return str\n    .split(\" \")\n    .map(word =>\n      !isAcronym(word)\n        ? word[0].toUpperCase() + word.slice(1).toLowerCase()\n        : word\n    )\n    .join(\" \");\n}\n\nfunction removeUnderscores(str: string) {\n  if (typeof str !== \"string\") return str;\n  return str.replace(/_/g, \" \");\n}\n\nfunction offsetToPacificTime(date: moment.Moment) {\n  if (date.tz(\"America/Los_Angeles\").isDST()) return date.utcOffset(\"-07:00\");\n  return date.utcOffset(\"-08:00\");\n}\n\nfunction dateTime(date: number, format?: string) {\n  if (typeof date !== \"number\") return date;\n  return offsetToPacificTime(moment(date)).format(format);\n}\n\nfunction relativeTime(date: number) {\n  if (typeof date !== \"number\") return date;\n  return moment(date).fromNow();\n}\n\nfunction date(date: number) {\n  if (typeof date !== \"number\") return date;\n  return offsetToPacificTime(moment(date)).format(\"MMM D, YYYY\");\n}\n\nfunction dateWithDay(date: number) {\n  if (typeof date !== \"number\") return date;\n  return offsetToPacificTime(moment(date)).format(\"ddd, MMM D, YYYY\");\n}\n\nfunction dateRange(date1: number, date2: number) {\n  if (!date1 && !date2) return null;\n  const str1 = offsetToPacificTime(moment(date1)).format(\"MMM D, YYYY\");\n  const str2 = offsetToPacificTime(moment(date2)).format(\"MMM D, YYYY\");\n  if (!date1) return str2;\n  if (!date2) return str1;\n  if (date1 === date2) return str1;\n  return `${str1} - ${str2}`;\n}\n\nfunction toSnakeCase(str: string) {\n  let lastIsUpper = true;\n  return str\n    .split(\"\")\n    .map(char => {\n      if (char.toUpperCase() === char) {\n        if (lastIsUpper) return char.toLowerCase();\n        lastIsUpper = true;\n        return \"_\" + char.toLowerCase();\n      } else {\n        lastIsUpper = false;\n        return char.toLowerCase();\n      }\n    })\n    .join(\"\");\n}\n\nexport {\n  toTitleCase,\n  removeUnderscores,\n  dateTime,\n  relativeTime,\n  date,\n  dateWithDay,\n  dateRange,\n  toSnakeCase\n};\n","import React from \"react\";\nimport styles from \"./toggle.module.css\";\n\ninterface PropTypes {\n  onChange: { (newVal: boolean): unknown };\n  value: boolean;\n}\n\nconst Toggle: React.FC<PropTypes> = props => {\n  return (\n    <span\n      className={[styles.container, props.value ? styles.selected : \"\"].join(\n        \" \"\n      )}\n      onClick={() => props.onChange(!props.value)}\n    >\n      <div className={styles.knob} />\n    </span>\n  );\n};\n\nexport default Toggle;\n","import React from \"react\";\nimport styles from \"./input.module.css\";\n\ninterface PropTypes<T extends string | number> {\n  onChange: { (newVal: T): unknown };\n  value: T;\n}\n\nconst Input: React.FC<PropTypes<string | number>> = props => {\n  const parseOnChange = (val: string) => {\n    if (typeof props.value === \"number\") return parseFloat(val);\n    return val;\n  };\n  return (\n    <input\n      type=\"text\"\n      className={styles.container}\n      onChange={e => props.onChange(parseOnChange(e.target.value))}\n      value={props.value}\n    />\n  );\n};\n\nexport default Input;\n","import React, { useState } from \"react\";\nimport Header from \"../../components/header/header\";\nimport styles from \"./settings.module.css\";\nimport fastPropertyProvider from \"../../providers/fastPropertyProvider\";\nimport {\n  toSnakeCase,\n  toTitleCase,\n  removeUnderscores\n} from \"../../utils/stringFormatting\";\nimport Toggle from \"../../components/toggle/toggle\";\nimport Input from \"../../components/input/input\";\n\nconst formatFp = (fp: string) =>\n  toTitleCase(removeUnderscores(toSnakeCase(fp)));\n\nconst Settings: React.FC = () => {\n  const [config, setConfig] = useState({} as { [key: string]: any });\n\n  let updateTimeout = 0;\n  const setValue = (key: string) => (value: any) => {\n    const newValue = { ...config, [key]: value };\n    setConfig(newValue);\n    clearTimeout(updateTimeout);\n    updateTimeout = window.setTimeout(\n      () => fastPropertyProvider.put(newValue),\n      1000\n    );\n  };\n\n  if (!Object.keys(config).length) {\n    fastPropertyProvider.get().then(setConfig);\n  }\n\n  return (\n    <React.Fragment>\n      <Header />\n      <div className={styles.container}>\n        {Object.keys(config).map(key => (\n          <div key={key} className={styles.row}>\n            <div className={styles.left}>{formatFp(key)}</div>\n            <div className={styles.right}>\n              {typeof config[key] === \"boolean\" ? (\n                <Toggle value={config[key]} onChange={setValue(key)} />\n              ) : (\n                <Input value={config[key]} onChange={setValue(key)} />\n              )}\n            </div>\n          </div>\n        ))}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Settings;\n","import config from \"../config\";\nimport authHelper from \"../utils/authHelper\";\n\nexport interface Device {\n  id: string;\n  name: string;\n  status: boolean | null;\n}\n\nclass DeviceProvider {\n  async getAll(): Promise<Device[]> {\n    const token = authHelper.getToken();\n    if (token === null) throw new Error(\"UNAUTHORIZED\");\n    const res = await fetch(`${config(\"serverPath\")}/api/devices`, {\n      headers: {\n        Authorization: token\n      }\n    });\n    const msg = await res.json();\n    return msg.devices;\n  }\n\n  async put(id: string, device: Partial<Device>): Promise<Device> {\n    const token = authHelper.getToken();\n    if (token === null) throw new Error(\"UNAUTHORIZED\");\n    const res = await fetch(`${config(\"serverPath\")}/api/devices/${id}`, {\n      method: \"PUT\",\n      headers: {\n        Authorization: token,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(device)\n    });\n    const msg = await res.json();\n    return msg;\n  }\n}\n\nconst deviceProvider = new DeviceProvider();\n\nexport default deviceProvider;\nexport { DeviceProvider };\n","import React, { useState } from \"react\";\nimport Header from \"../../components/header/header\";\nimport styles from \"./devices.module.css\";\nimport Toggle from \"../../components/toggle/toggle\";\nimport deviceProvider, { Device } from \"../../providers/deviceProvider\";\n\nconst Devices: React.FC = () => {\n  const [deviceList, setDeviceList] = useState([] as Device[]);\n\n  if (!deviceList.length) {\n    deviceProvider.getAll().then(setDeviceList);\n  }\n\n  const setValue = (id: string) => (status: any) => {\n    const idx = deviceList.findIndex(d => d.id === id);\n    const device = { ...deviceList[idx] };\n    device.status = status;\n    const list = deviceList.slice();\n    list.splice(idx, 1, device);\n    deviceProvider.put(device.id, { status });\n    setDeviceList(list);\n  };\n\n  return (\n    <React.Fragment>\n      <Header />\n      <div className={styles.container}>\n        {deviceList.map(device => (\n          <div key={device.id} className={styles.row}>\n            <div className={styles.left}>{device.name}</div>\n            <div className={styles.right}>\n              {typeof device.status === \"boolean\" ? (\n                <Toggle value={device.status} onChange={setValue(device.id)} />\n              ) : null}\n            </div>\n          </div>\n        ))}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Devices;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport ViewCameras from \"./containers/viewCameras/viewCameras\";\nimport GateOpener from \"./containers/gateOpener/gateOpener\";\nimport Doorman from \"./containers/doorman/doorman\";\nimport NearbyDevices from \"./containers/nearbyDevices/nearbyDevices\";\nimport Login from \"./containers/login/login\";\nimport Home from \"./containers/home/home\";\nimport Logout from \"./containers/login/logout\";\nimport config from \"./config\";\nimport EnvironmentSelection from \"./components/environmentSelection/environmentSelection\";\nimport Settings from \"./containers/settings/settings\";\nimport Devices from \"./containers/devices/devices\";\n\nconst App: React.FC = () => {\n  return (\n    <Router>\n      <EnvironmentSelection />\n      <Route path={config(\"appRoot\")} exact component={Home} />\n      <Route path={`${config(\"appRoot\")}/login`} exact component={Login} />\n      <Route path={`${config(\"appRoot\")}/logout`} exact component={Logout} />\n      <Route path={`${config(\"appRoot\")}/cams`} exact component={ViewCameras} />\n      <Route path={`${config(\"appRoot\")}/gate`} exact component={GateOpener} />\n      <Route path={`${config(\"appRoot\")}/doorman`} exact component={Doorman} />\n      <Route path={`${config(\"appRoot\")}/devices`} exact component={Devices} />\n      <Route\n        path={`${config(\"appRoot\")}/settings`}\n        exact\n        component={Settings}\n      />\n      <Route\n        path={`${config(\"appRoot\")}/nearby`}\n        exact\n        component={NearbyDevices}\n      />\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}