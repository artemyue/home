{"version":3,"sources":["components/environmentSelection/environmentSelection.module.css","containers/login/login.module.css","containers/gateOpener/gateOpener.module.css","containers/doorman/doorman.module.css","components/header/header.module.css","config.ts","utils/storageHelper.ts","utils/authHelper.ts","components/loginRequired/loginRequired.tsx","components/header/header.tsx","providers/cameraProvider.ts","containers/viewCameras/viewCameras.tsx","providers/gateProvider.ts","containers/gateOpener/gateOpener.tsx","providers/announcementProvider.ts","containers/doorman/doorman.tsx","providers/beaconProvider.ts","containers/nearbyDevices/nearbyDevices.tsx","providers/authProvider.ts","containers/login/login.tsx","containers/home/home.tsx","containers/login/logout.tsx","providers/healthProvider.ts","components/environmentSelection/environmentSelection.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","circle","red","green","blue","container","submit","header","hidden","logs","response","navbar","configValues","local","serverPath","appRoot","prod","currentEnv","setConfigEnv","env","config","key","arguments","length","undefined","USE_LOCAL_STORE","localStorage","storageHelper","memoryStore","lastExpirationCheck","Date","now","this","store","_getStore","Object","keys","forEach","expiration","_setStore","dataStr","getItem","JSON","parse","value","_checkForExpired","setItem","stringify","data","clear","authHelper","auth","set","setAuth","get","token","LoginRequired","getToken","react_default","a","createElement","react_router","to","concat","Header","className","style","loginRequired","react_router_dom","cameraProvider","cam","Error","fetch","method","headers","Authorization","res","blob","ViewCameras","state","images","totalCameras","mounted","fetchImages","_callee","_loop","i","regenerator_default","wrap","_context2","prev","next","_this","abrupt","mark","imageBlob","image","_context","getCameraImage","sent","URL","createObjectURL","setState","slice","splice","t0","stop","delegateYield","setTimeout","getTotalCameras","Fragment","map","idx","alt","src","React","Component","gateProvider","text","msg","GateOpener","_useState","useState","_useState2","slicedToArray","setLogs","getLogs","then","_useState3","_useState4","openRes","setOpenRes","type","onClick","openGate","split","reverse","join","announcementProvider","Doorman","setMsg","styles","comingHome","catch","console","error","bind","beaconProvider","NearbyDevices","nearbyDevices","setNearbyDevices","currentDevices","id","dangerouslySetInnerHTML","__html","authProvider","username","password","body","redirect","Content-Type","json","Login","loggedIn","login","e","preventDefault","_this2","onSubmit","placeholder","name","onChange","target","Home","Logout","clearAuth","healthProvider","lastRefresh","REFRESH_INTERVAL","EnvironmentSelection","setEnv","findBestEnvironment","_findBestEnvironment","apply","asyncToGenerator","envPriority","foundEnv","_env","healthcheck","color","App","environmentSelection","path","exact","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","ReactDOM","render","src_App","document","getElementById","process","href","origin","addEventListener","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2418231e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"circle\":\"environmentSelection_circle__S0XSZ\",\"red\":\"environmentSelection_red__1uNah\",\"green\":\"environmentSelection_green__3lg7c\",\"blue\":\"environmentSelection_blue__33kJ8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"login_container__1PQ8s\",\"submit\":\"login_submit__2kKaX\",\"header\":\"login_header__5znqL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"gateOpener_container__3nsRs\",\"hidden\":\"gateOpener_hidden__3Q13x\",\"logs\":\"gateOpener_logs__WzVmp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"doorman_container__1jubE\",\"response\":\"doorman_response__3Qr6R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"header_navbar__2tHvZ\"};","export type ConfigTypes = \"serverPath\" | \"appRoot\";\nexport type ConfigEnv = \"local\" | \"prod\";\n\nconst configValues = {\n  // local: {\n  //   serverPath: \"https://192.168.50.253:8084\",\n  //   appRoot: \"/home\"\n  // },\n  local: {\n    serverPath: \"https://artem.redirectme.net\",\n    appRoot: \"/home\"\n  },\n  prod: {\n    serverPath: \"https://artemcams.serveo.net\",\n    appRoot: \"/home\"\n  }\n};\n\nlet currentEnv: ConfigEnv = \"prod\";\n\nfunction setConfigEnv(env: ConfigEnv) {\n  currentEnv = env;\n}\n\nfunction config(key: ConfigTypes, env: ConfigEnv = currentEnv) {\n  return configValues[env][key];\n}\n\nexport default config;\nexport { setConfigEnv };\n","interface StorageItem {\n  expiration: number;\n  value: any;\n}\n\ninterface DataStore {\n  [prop: string]: StorageItem;\n}\n\nconst USE_LOCAL_STORE = typeof localStorage !== \"undefined\";\nconst LOCAL_STORE_KEY = \"ARTEM_DATA_STORE\";\nconst VALUE_EXPIRATION = 14 * 24 * 60 * 60 * 1000;\nconst EXPIRATION_CHECK_INTERVAL = 60 * 60 * 1000;\n\nclass StorageHelper {\n  memoryStore: DataStore = {};\n  lastExpirationCheck = 0;\n  _checkForExpired() {\n    if (Date.now() < this.lastExpirationCheck + EXPIRATION_CHECK_INTERVAL)\n      return;\n    this.lastExpirationCheck = Date.now();\n    const store = this._getStore();\n    Object.keys(store).forEach(key => {\n      if (store[key].expiration < Date.now()) delete store[key];\n    });\n    this._setStore(store);\n  }\n\n  _getStore(): DataStore {\n    if (USE_LOCAL_STORE) {\n      const dataStr = localStorage.getItem(LOCAL_STORE_KEY);\n      if (dataStr) return JSON.parse(dataStr);\n    }\n    return this.memoryStore;\n  }\n\n  _setStore(value: DataStore) {\n    this._checkForExpired();\n    this.memoryStore = value;\n    if (USE_LOCAL_STORE) {\n      localStorage.setItem(LOCAL_STORE_KEY, JSON.stringify(value));\n    }\n  }\n\n  set(key: string, value: any, expiration = VALUE_EXPIRATION) {\n    const store = this._getStore();\n    store[key] = {\n      expiration: Date.now() + expiration,\n      value\n    };\n    this._setStore(store);\n    return value;\n  }\n\n  get(key: string) {\n    const data = this._getStore()[key];\n    if (!data) return;\n    if (data.expiration < Date.now()) return this.clear(key);\n    return data.value;\n  }\n\n  clear(key: string) {\n    const data = this._getStore();\n    delete data[key];\n    this._setStore(data);\n  }\n}\n\nconst storageHelper = new StorageHelper();\nexport default storageHelper;\nexport { StorageHelper };\n","import storageHelper from \"./storageHelper\";\n\ninterface Auth {\n  token: string;\n}\n\nclass AuthHelper {\n  auth: Auth | null = null;\n  setAuth(auth: Auth) {\n    this.auth = auth || null;\n    storageHelper.set(\"auth\", auth);\n  }\n  clearAuth() {\n    this.auth = null;\n    storageHelper.clear(\"auth\");\n  }\n  getToken() {\n    if (this.auth === null) this.setAuth(storageHelper.get(\"auth\"));\n    if (this.auth === null) return null;\n    return this.auth.token;\n  }\n}\n\nconst authHelper = new AuthHelper();\nexport default authHelper;\nexport { AuthHelper };\n","import React from \"react\";\nimport { Redirect } from \"react-router\";\nimport authHelper from \"../../utils/authHelper\";\nimport config from \"../../config\";\n\nconst LoginRequired: React.FC = () => {\n  if (authHelper.getToken() === null)\n    return <Redirect to={`${config(\"appRoot\")}/login`} />;\n  return null;\n};\n\nexport default LoginRequired;\n","import React from \"react\";\nimport style from \"./header.module.css\";\nimport { Link } from \"react-router-dom\";\nimport config from \"../../config\";\nimport LoginRequired from \"../loginRequired/loginRequired\";\n\nconst Header: React.FC = () => {\n  return (\n    <div className={style.navbar}>\n      <LoginRequired />\n      <Link to={`${config(\"appRoot\")}/cams`}>Cams</Link>\n      <Link to={`${config(\"appRoot\")}/gate`}>Gate</Link>\n      <Link to={`${config(\"appRoot\")}/doorman`}>Doorman</Link>\n      {/* <Link to={`${config(\"appRoot\")}/nearby`}>Nearby</Link> */}\n      {/* <Link to={`${config(\"appRoot\")}/login`}>Login</Link> */}\n      {/* <Link to={`${config(\"appRoot\")}/logout`}>Logout</Link> */}\n    </div>\n  );\n};\n\nexport default Header;\n","import config from \"../config\";\nimport authHelper from \"../utils/authHelper\";\n\nclass CameraProvider {\n  async getTotalCameras() {\n    return 3;\n  }\n  async getCameraImage(cam: number): Promise<Blob> {\n    const token = authHelper.getToken();\n    if (token === null) throw new Error(\"UNAUTHORIZED\");\n    const res = await fetch(`${config(\"serverPath\")}/api/img/${cam}`, {\n      method: \"GET\",\n      headers: {\n        Authorization: token // \"Bearer \" + authHelper.getToken()\n      }\n    });\n    const blob = await res.blob();\n    return blob;\n  }\n}\n\nconst cameraProvider = new CameraProvider();\n\nexport default cameraProvider;\nexport { CameraProvider };\n","import React from \"react\";\nimport Header from \"../../components/header/header\";\nimport cameraProvider from \"../../providers/cameraProvider\";\nimport style from \"./viewCameras.module.css\";\n\ninterface ViewCamerasProps {}\ninterface ViewCamerasState {\n  images: string[];\n  totalCameras: number;\n}\n\nclass ViewCameras extends React.Component<ViewCamerasProps, ViewCamerasState> {\n  state = {\n    images: [],\n    totalCameras: 0\n  };\n  mounted: boolean = false;\n  async componentDidMount() {\n    this.mounted = true;\n    const totalCameras = await cameraProvider.getTotalCameras();\n    if (!this.mounted) return;\n    this.setState({ totalCameras });\n    this.fetchImages();\n  }\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n  fetchImages = async () => {\n    if (!this.mounted) return;\n    for (let i = 0; i < this.state.totalCameras; i++) {\n      try {\n        const imageBlob = await cameraProvider.getCameraImage(i);\n        const image = URL.createObjectURL(imageBlob);\n        if (!this.mounted) break;\n        this.setState(state => {\n          const images = state.images.slice();\n          images.splice(i, 1, image);\n          return { images };\n        });\n      } catch (e) {}\n    }\n\n    setTimeout(this.fetchImages, 1000);\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <Header />\n        {this.state.images.map((image, idx) => (\n          <img className={style.image} key={idx} alt=\"cam\" src={image} />\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ViewCameras;\n","import config from \"../config\";\nimport authHelper from \"../utils/authHelper\";\n\nclass GateProvider {\n  async openGate(): Promise<string> {\n    const token = authHelper.getToken();\n    if (token === null) throw new Error(\"UNAUTHORIZED\");\n    const res = await fetch(`${config(\"serverPath\")}/api/keypad/open`, {\n      method: \"POST\",\n      headers: {\n        Authorization: token // \"Bearer \" + authHelper.getToken()\n      }\n    });\n    const msg = await res.text();\n    return msg;\n  }\n  async getLogs(): Promise<string> {\n    const token = authHelper.getToken();\n    if (token === null) throw new Error(\"UNAUTHORIZED\");\n    const res = await fetch(`${config(\"serverPath\")}/api/keypad/logs`, {\n      method: \"GET\",\n      headers: {\n        Authorization: token // \"Bearer \" + authHelper.getToken()\n      }\n    });\n    const msg = await res.text();\n    return msg;\n  }\n}\n\nconst gateProvider = new GateProvider();\n\nexport default gateProvider;\nexport { GateProvider };\n","import React, { useState } from \"react\";\nimport Header from \"../../components/header/header\";\nimport style from \"./gateOpener.module.css\";\nimport gateProvider from \"../../providers/gateProvider\";\n\nconst GateOpener: React.FC = () => {\n  const [logs, setLogs] = useState(\"\");\n  if (!logs) gateProvider.getLogs().then(setLogs);\n\n  const [openRes, setOpenRes] = useState(\"\");\n  return (\n    <React.Fragment>\n      <Header />\n      <div className={style.container}>\n        <input\n          type=\"submit\"\n          value=\"Open Gate\"\n          onClick={() => gateProvider.openGate().then(setOpenRes)}\n        />\n        <div>{openRes}</div>\n        <div className={style.logs}>\n          {logs\n            .split(\"\\n\")\n            .reverse()\n            .join(\"\\n\")}\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default GateOpener;\n","import config from \"../config\";\nimport authHelper from \"../utils/authHelper\";\n\nclass AnnouncementProvider {\n  async comingHome(): Promise<string> {\n    const token = authHelper.getToken();\n    if (token === null) throw new Error(\"UNAUTHORIZED\");\n    const res = await fetch(\n      `${config(\"serverPath\")}/api/announce/coming_home`,\n      {\n        method: \"POST\",\n        headers: {\n          Authorization: token // \"Bearer \" + authHelper.getToken()\n        }\n      }\n    );\n    const msg = await res.text();\n    return msg;\n  }\n}\n\nconst announcementProvider = new AnnouncementProvider();\n\nexport default announcementProvider;\nexport { AnnouncementProvider };\n","import React, { useState } from \"react\";\nimport Header from \"../../components/header/header\";\nimport styles from \"./doorman.module.css\";\nimport announcementProvider from \"../../providers/announcementProvider\";\n\nconst Doorman: React.FC = () => {\n  const [msg, setMsg] = useState(\"\");\n\n  function clickHandler() {\n    announcementProvider\n      .comingHome()\n      .then(setMsg)\n      .catch(console.error.bind(console));\n  }\n\n  return (\n    <React.Fragment>\n      <Header />\n      <div className={styles.container}>\n        <input type=\"submit\" value=\"Coming Home\" onClick={clickHandler} />\n        <div className={styles.response}>{msg}</div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Doorman;\n","import config from \"../config\";\nimport authHelper from \"../utils/authHelper\";\n\nclass BeaconProvider {\n  async currentDevices(): Promise<string> {\n    const token = authHelper.getToken();\n    if (token === null) throw new Error(\"UNAUTHORIZED\");\n    const res = await fetch(\n      `${config(\"serverPath\")}/api/nearby_devices/current`,\n      {\n        headers: { Authorization: token }\n      }\n    );\n    const msg = await res.text();\n    return msg;\n  }\n  async allDevices(): Promise<string> {\n    const token = authHelper.getToken();\n    if (token === null) throw new Error(\"UNAUTHORIZED\");\n    const res = await fetch(`${config(\"serverPath\")}/api/nearby_devices/all`, {\n      headers: { Authorization: token }\n    });\n    const msg = await res.text();\n    return msg;\n  }\n}\n\nconst beaconProvider = new BeaconProvider();\n\nexport default beaconProvider;\nexport { BeaconProvider };\n","import React, { useState } from \"react\";\nimport Header from \"../../components/header/header\";\nimport beaconProvider from \"../../providers/beaconProvider\";\n\nconst NearbyDevices: React.FC = () => {\n  const [nearbyDevices, setNearbyDevices] = useState(\"\");\n  if (!nearbyDevices) {\n    beaconProvider\n      .currentDevices()\n      .then(setNearbyDevices)\n      .catch(console.error.bind(console));\n  }\n  return (\n    <React.Fragment>\n      <Header />\n      <h1>Nearby Devices</h1>\n      <div id=\"current\" dangerouslySetInnerHTML={{ __html: nearbyDevices }} />\n      <h1>All Devices</h1>\n      <div id=\"all\" />\n    </React.Fragment>\n  );\n};\n\nexport default NearbyDevices;\n","import config from \"../config\";\n\ninterface LoginResponse {\n  token: string;\n}\n\nclass AuthProvider {\n  async login(username: string, password: string): Promise<LoginResponse> {\n    const res = await fetch(`${config(\"serverPath\")}/api/login`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        username,\n        password,\n        redirect: false\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const json = await res.json();\n    return json;\n  }\n}\n\nconst authProvider = new AuthProvider();\n\nexport default authProvider;\nexport { AuthProvider };\n","import React from \"react\";\nimport style from \"./login.module.css\";\nimport authProvider from \"../../providers/authProvider\";\nimport authHelper from \"../../utils/authHelper\";\nimport { Redirect } from \"react-router\";\nimport config from \"../../config\";\n\ninterface LoginProps {}\ninterface LoginState {\n  loggedIn: boolean;\n  username: string;\n  password: string;\n}\n\nclass Login extends React.Component<LoginProps, LoginState> {\n  state = {\n    loggedIn: false,\n    username: \"\",\n    password: \"\"\n  };\n  login = async (e: React.FormEvent) => {\n    e.preventDefault();\n    const auth = await authProvider.login(\n      this.state.username,\n      this.state.password\n    );\n    authHelper.setAuth(auth);\n    this.setState({});\n  };\n  render() {\n    if (authHelper.getToken() !== null)\n      return <Redirect to={config(\"appRoot\")} />;\n    return (\n      <div className={style.container}>\n        <form onSubmit={this.login}>\n          <div className={style.header}>Login</div>\n          <input\n            placeholder=\"Username\"\n            type=\"text\"\n            name=\"username\"\n            onChange={e => this.setState({ username: e.target.value })}\n          />\n          <input\n            placeholder=\"Password\"\n            type=\"password\"\n            name=\"password\"\n            onChange={e => this.setState({ password: e.target.value })}\n          />\n          <input className={style.submit} type=\"submit\" name=\"submit\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React from \"react\";\nimport Header from \"../../components/header/header\";\n\nconst Home: React.FC = () => {\n  return (\n    <React.Fragment>\n      <Header />\n      <div>Home</div>\n    </React.Fragment>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport authHelper from \"../../utils/authHelper\";\nimport { Redirect } from \"react-router\";\nimport config from \"../../config\";\n\nconst Logout: React.FC = () => {\n  authHelper.clearAuth();\n  return <Redirect to={`${config(\"appRoot\")}/login`} />;\n};\n\nexport default Logout;\n","import config, { ConfigEnv } from \"../config\";\nimport authHelper from \"../utils/authHelper\";\n\nclass HealthProvider {\n  async healthcheck(env?: ConfigEnv): Promise<string> {\n    const token = authHelper.getToken();\n    if (token === null) throw new Error(\"UNAUTHORIZED\");\n    const res = await fetch(`${config(\"serverPath\", env)}/healthcheck`, {\n      headers: { Authorization: token }\n    });\n    const text = await res.text();\n    return text;\n  }\n}\n\nconst healthProvider = new HealthProvider();\n\nexport default healthProvider;\nexport { HealthProvider };\n","import React, { useState } from \"react\";\nimport { ConfigEnv, setConfigEnv } from \"../../config\";\nimport healthProvider from \"../../providers/healthProvider\";\nimport styles from \"./environmentSelection.module.css\";\n\nlet lastRefresh = 0;\nconst REFRESH_INTERVAL = 60 * 1000;\n\nconst EnvironmentSelection: React.FC = () => {\n  const [env, setEnv] = useState();\n\n  async function findBestEnvironment() {\n    const now = Date.now();\n    if (lastRefresh + REFRESH_INTERVAL > now)\n      return setTimeout(findBestEnvironment, 1000);\n    lastRefresh = now;\n\n    const envPriority: ConfigEnv[] = [\"local\", \"prod\"];\n    let foundEnv = false;\n    for (let i = 0; i < envPriority.length; i++) {\n      try {\n        const env = envPriority[i];\n        await healthProvider.healthcheck(env);\n        setEnv(env);\n        setConfigEnv(env);\n        foundEnv = true;\n        break;\n      } catch (e) {}\n    }\n    if (!foundEnv) {\n      setEnv(\"offline\");\n      setConfigEnv(\"prod\");\n    }\n\n    setTimeout(findBestEnvironment, 1000);\n  }\n\n  if (!env) {\n    findBestEnvironment();\n    return null;\n  }\n\n  const color =\n    env === \"prod\"\n      ? styles.blue\n      : env === \"local\"\n      ? styles.green\n      : env === \"offline\"\n      ? styles.red\n      : \"\";\n\n  return <div className={[styles.circle, color].join(\" \")} />;\n};\n\nexport default EnvironmentSelection;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport ViewCameras from \"./containers/viewCameras/viewCameras\";\nimport GateOpener from \"./containers/gateOpener/gateOpener\";\nimport Doorman from \"./containers/doorman/doorman\";\nimport NearbyDevices from \"./containers/nearbyDevices/nearbyDevices\";\nimport Login from \"./containers/login/login\";\nimport Home from \"./containers/home/home\";\nimport Logout from \"./containers/login/logout\";\nimport config from \"./config\";\nimport EnvironmentSelection from \"./components/environmentSelection/environmentSelection\";\n\nconst App: React.FC = () => {\n  return (\n    <Router>\n      <EnvironmentSelection />\n      <Route path={config(\"appRoot\")} exact component={Home} />\n      <Route path={`${config(\"appRoot\")}/login`} exact component={Login} />\n      <Route path={`${config(\"appRoot\")}/logout`} exact component={Logout} />\n      <Route path={`${config(\"appRoot\")}/cams`} exact component={ViewCameras} />\n      <Route path={`${config(\"appRoot\")}/gate`} exact component={GateOpener} />\n      <Route path={`${config(\"appRoot\")}/doorman`} exact component={Doorman} />\n      <Route\n        path={`${config(\"appRoot\")}/nearby`}\n        exact\n        component={NearbyDevices}\n      />\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}